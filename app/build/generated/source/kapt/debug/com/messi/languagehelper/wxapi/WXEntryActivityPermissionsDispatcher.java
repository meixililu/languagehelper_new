// This file was generated by PermissionsDispatcher. Do not modify!
package com.messi.languagehelper.wxapi;

import androidx.annotation.NonNull;
import androidx.core.app.ActivityCompat;
import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import permissions.dispatcher.PermissionRequest;
import permissions.dispatcher.PermissionUtils;

final class WXEntryActivityPermissionsDispatcher {
  private static final int REQUEST_SHOWPERMISSION = 0;

  private static final String[] PERMISSION_SHOWPERMISSION = new String[] {"android.permission.READ_PHONE_STATE","android.permission.READ_EXTERNAL_STORAGE","android.permission.WRITE_EXTERNAL_STORAGE","android.permission.ACCESS_FINE_LOCATION"};

  private WXEntryActivityPermissionsDispatcher() {
  }

  static void showPermissionWithPermissionCheck(@NonNull WXEntryActivity target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_SHOWPERMISSION)) {
      target.showPermission();
    } else {
      if (PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_SHOWPERMISSION)) {
        target.onShowRationale(new WXEntryActivityShowPermissionPermissionRequest(target));
      } else {
        ActivityCompat.requestPermissions(target, PERMISSION_SHOWPERMISSION, REQUEST_SHOWPERMISSION);
      }
    }
  }

  static void onRequestPermissionsResult(@NonNull WXEntryActivity target, int requestCode,
      int[] grantResults) {
    switch (requestCode) {
      case REQUEST_SHOWPERMISSION:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.showPermission();
      } else {
        target.onPerDenied();
      }
      break;
      default:
      break;
    }
  }

  private static final class WXEntryActivityShowPermissionPermissionRequest implements PermissionRequest {
    private final WeakReference<WXEntryActivity> weakTarget;

    private WXEntryActivityShowPermissionPermissionRequest(@NonNull WXEntryActivity target) {
      this.weakTarget = new WeakReference<WXEntryActivity>(target);
    }

    @Override
    public void proceed() {
      WXEntryActivity target = weakTarget.get();
      if (target == null) return;
      ActivityCompat.requestPermissions(target, PERMISSION_SHOWPERMISSION, REQUEST_SHOWPERMISSION);
    }

    @Override
    public void cancel() {
      WXEntryActivity target = weakTarget.get();
      if (target == null) return;
      target.onPerDenied();
    }
  }
}
