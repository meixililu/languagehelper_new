// Code generated by moshi-kotlin-codegen. Do not edit.
package com.messi.languagehelper.bean

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class CourseMediasJsonAdapter(
  moshi: Moshi
) : JsonAdapter<CourseMedias>() {
  private val options: JsonReader.Options = JsonReader.Options.of("media_url", "start_time",
      "end_time", "img", "content", "transalte", "video_type")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "media_url")

  @Volatile
  private var constructorRef: Constructor<CourseMedias>? = null

  override fun toString(): String = buildString(34) {
      append("GeneratedJsonAdapter(").append("CourseMedias").append(')') }

  override fun fromJson(reader: JsonReader): CourseMedias {
    var media_url: String? = null
    var start_time: String? = null
    var end_time: String? = null
    var img: String? = null
    var content: String? = null
    var transalte: String? = null
    var video_type: String? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          media_url = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("media_url",
              "media_url", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          start_time = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("start_time",
              "start_time", reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          end_time = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("end_time",
              "end_time", reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          img = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("img", "img", reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          content = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("content",
              "content", reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          transalte = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("transalte",
              "transalte", reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        6 -> {
          video_type = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("video_type",
              "video_type", reader)
          // $mask = $mask and (1 shl 6).inv()
          mask0 = mask0 and 0xffffffbf.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    @Suppress("UNCHECKED_CAST")
    val localConstructor: Constructor<CourseMedias> = this.constructorRef ?:
        CourseMedias::class.java.getDeclaredConstructor(String::class.java, String::class.java,
        String::class.java, String::class.java, String::class.java, String::class.java,
        String::class.java, Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
        this.constructorRef = it }
    return localConstructor.newInstance(
        media_url,
        start_time,
        end_time,
        img,
        content,
        transalte,
        video_type,
        mask0,
        null
    )
  }

  override fun toJson(writer: JsonWriter, value: CourseMedias?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("media_url")
    stringAdapter.toJson(writer, value.media_url)
    writer.name("start_time")
    stringAdapter.toJson(writer, value.start_time)
    writer.name("end_time")
    stringAdapter.toJson(writer, value.end_time)
    writer.name("img")
    stringAdapter.toJson(writer, value.img)
    writer.name("content")
    stringAdapter.toJson(writer, value.content)
    writer.name("transalte")
    stringAdapter.toJson(writer, value.transalte)
    writer.name("video_type")
    stringAdapter.toJson(writer, value.video_type)
    writer.endObject()
  }
}
