
package com.messi.languagehelper.box;

import com.messi.languagehelper.box.ReadingSubjectCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "ReadingSubject". Can be used for QueryBuilder and for referencing DB names.
 */
public final class ReadingSubject_ implements EntityInfo<ReadingSubject> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "ReadingSubject";

    public static final int __ENTITY_ID = 3;

    public static final Class<ReadingSubject> __ENTITY_CLASS = ReadingSubject.class;

    public static final String __DB_NAME = "ReadingSubject";

    public static final CursorFactory<ReadingSubject> __CURSOR_FACTORY = new Factory();

    @Internal
    static final ReadingSubjectIdGetter __ID_GETTER = new ReadingSubjectIdGetter();

    public final static ReadingSubject_ __INSTANCE = new ReadingSubject_();

    public final static io.objectbox.Property<ReadingSubject> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<ReadingSubject> objectId =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "objectId");

    public final static io.objectbox.Property<ReadingSubject> name =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, String.class, "name");

    public final static io.objectbox.Property<ReadingSubject> category =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, String.class, "category");

    public final static io.objectbox.Property<ReadingSubject> source_name =
        new io.objectbox.Property<>(__INSTANCE, 4, 9, String.class, "source_name");

    public final static io.objectbox.Property<ReadingSubject> source_url =
        new io.objectbox.Property<>(__INSTANCE, 5, 10, String.class, "source_url");

    public final static io.objectbox.Property<ReadingSubject> imgId =
        new io.objectbox.Property<>(__INSTANCE, 6, 12, int.class, "imgId");

    public final static io.objectbox.Property<ReadingSubject> level =
        new io.objectbox.Property<>(__INSTANCE, 7, 5, String.class, "level");

    public final static io.objectbox.Property<ReadingSubject> code =
        new io.objectbox.Property<>(__INSTANCE, 8, 6, String.class, "code");

    public final static io.objectbox.Property<ReadingSubject> order =
        new io.objectbox.Property<>(__INSTANCE, 9, 7, String.class, "order");

    public final static io.objectbox.Property<ReadingSubject> views =
        new io.objectbox.Property<>(__INSTANCE, 10, 11, int.class, "views");

    public final static io.objectbox.Property<ReadingSubject> creat_time =
        new io.objectbox.Property<>(__INSTANCE, 11, 8, long.class, "creat_time");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<ReadingSubject>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        objectId,
        name,
        category,
        source_name,
        source_url,
        imgId,
        level,
        code,
        order,
        views,
        creat_time
    };

    public final static io.objectbox.Property<ReadingSubject> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<ReadingSubject> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<ReadingSubject>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<ReadingSubject> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<ReadingSubject> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<ReadingSubject> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class ReadingSubjectIdGetter implements IdGetter<ReadingSubject> {
        @Override
        public long getId(ReadingSubject object) {
            return object.getId();
        }
    }

}
